import multiprocessing, threading, os, math, random, requests

s2=[
    ["","乌兰巴托","47.5733N107.0558E","47.4919N106.4158E"],
    ["","赤塔","52.0527N113.2119E","51.5932N113.3322E"],
    ["","乌兰乌德","51.5429N107.2357E","51.4500N107.4932E"],
    ["","伊尔库茨克","52.2317N104.0558E","52.1232N104.2557E"],
    ["","泰舍特","55.5753N97.5728E","55.5430N98.0430E"],
    ["","克拉斯诺亚尔斯克","55.5506N92.3627E","56.0000N93.0700E"],
    ["","新西伯利亚","55.0059N82.4456E","54.4813N83.0957E"],
    ["","鄂木斯克","55.0838N73.0456E","54.5003N73.3731E"],
    ["","叶卡捷琳堡","56.5815N60.2146E","56.3916N60.5115E"],
    ["","喀山","55.5500N48.5000E","55.4005N49.1855E"],
    ["","莫斯科","56.0151N36.4452E","55.0836N38.0000E"],
    ["","圣彼得堡","60.1500N29.2500E","59.3721N30.4700E"],
    ["","阿拉木图","43.2500N76.4320E","43.0146N77.0842E"],
    ["","塔什干","41.2400N69.0800E","41.1000N69.2400E"],
    ["","阿什哈巴德","38.0647N58.0000E","37.4900N58.3000E"],
    ["","马什哈德","36.2418N59.2557E","36.1100N59.4200E"],
    ["","德黑兰","35.4900N51.0400E","35.3600N51.3626E"],
    ["","库姆","34.3400N50.5700E","34.4900N50.4600E"],
    ["","阿瓦士","31.3100N48.3300E","31.1400N48.4800E"],
    ["","巴格达","33.3605N44.1300E","33.1124N44.3300E"],
    ["","梅尔辛（伊切尔）","36.5100N34.3100E","36.4800N34.4200E"],
    ["","伊斯坦布尔","41.1243N28.3500E","40.4800N29.2454E"],
    ["","阿克斗卡","46.5817N79.3930E","46.5623N79.4140E"],
    ["","阿斯塔纳","51.1802N71.1301E","51.00000N71.4500E"],
    ["","乌法","54.5800N55.4500E","54.3500N56.1500E"],
    ["","梁赞","54.4200N39.3100E","54.3142N39.5100E"],
    ["","明斯克","53.5800N27.2200E","53.4800N27.4900E"],
    ["","华沙","52.2200N20.5100E","52.0600N21.1700E"],
    ["","波兹南","52.3100N16.4400E","52.1700N17.0500E"],
    ["","柏林","52.4000N13.0500E","52.2000N13.4500E"],
    ["","汉诺威","52.2730N9.3557E","52.1800N9.5500E"],
    ["","阿姆斯特丹","52.2600N4.4300E","52.1600N5.0400E"],
    ["","鹿特丹","51.5943N4.2300E","51.5200N4.3600E"],
    ["","阿克托别","50.2200N57.0200E","50.1100N57.2100E"],
    ["","阿特劳","47.1100N51.4900E","47.0000N52.0300E"],
    ["","阿斯特拉罕","46.2800N47.5400E","46.1600N48.0900E"],
    ["","格罗兹尼","43.2400N45.3000E","43.1500N45.4500E"],
    ["","巴库","40.2900N49.3900E","40.1800N50.0336E"],
    ["","第比利斯","41.5100N44.3900E","41.3700N45.0000E"],
    ["","开塞利","38.5000N35.1900E","38.3700N35.3800E"],
    ["","安卡拉","40.0500N32.3057E","39.4400N33.0000E"],
    ["","赞詹","36.4338N48.2300E","36.3800N48.3600E"],
    ["","大不里士","38.0900N46.1100E","38.0000N46.2529E"],
    ["","吉尔吉特","35.5800N74.1300E","35.5100N74.3112E"],
    ["","阿伯塔巴德","34.0715N73.1100E","34.1400N73.1730E"],
    ["","伊斯兰堡","33.4706N72.4700E","33.2700N73.2300E"],
    ["","拉合尔","31.1600N74.0700E","31.4200N74.3400E"],
    ["","木尔坦","30.0300N71.1800E","30.1900N71.3900E"],
    ["","卡拉奇","24.3500N66.4000E","25.4000N67.4000E"],
    ["","瓜达尔","25.1746N62.1019E","25.0532N62.2834E"],
    ["","莱亚","30.5549N70.5435E","31.0004N70.5929E"],
    ["","苏库尔","27.4545N68.4630E","27.4029N68.5329E"],
    ["","胡兹达尔","27.5300N66.2621E","27.4230N66.4253E"],
    ["","贝拉","26.1425N66.1731E","26.1145N66.2015E"],
    ["","切尔乔","26.1700N65.3600E","26.2100N65.3100E"],
    ["","霍沙布","26.0157N63.5100E","25.5936N63.5411E"],
    ["","图尔伯德","26.0300N62.5530E","25.5715N63.0815E"],
    ["","吉沃尼","25.0515N61.4400E","25.0100N61.4845E"],
    ["","白沙瓦","34.0700N71.2200E","33.5100N71.4600E"],
    ["","本努","33.0215N70.3030E","32.5315N70.4530E"],
    ["","德拉伊斯梅尔汗","31.5508N70.5153E","31.4731N70.5603E"],
    ["","兹霍布","31.2527N69.2325E","31.1703N69.3835E"],
    ["","奎达","30.2004N66.5249E","30.0133N67.0917E"],
    ["","苏拉布","28.3015N66.1437E","28.2843N66.1710E"],
    ["","贝西马","27.5530N65.5300E","27.5345N65.5129E"],
    ["","本杰古尔","27.1806N63.0414E","26.0857N65.2013E"],
    ["","八莫","24.1717N97.1311E","24.1338N97.1523E"],
    ["","密支那","25.2716N97.2535E","25.2010N97.2041E"],
    ["","欣贝延","26.4204N96.1143E","26.4033N96.1318E"],
    ["","丁苏吉亚","27.2840N95.1946E","27.2825N95.2142E"],
    ["","焦尔哈德","26.4722N94.0812E","26.4147N94.1605E"],
    ["","因帕尔","24.5233N93.5243E","24.4413N93.5941E"],
    ["","阿加尔塔拉","23.5306N91.1338E","23.4632N91.2141E"],
    ["","加尔各答","23.0030N88.0659E","22.2037N88.3231E"],
    ["","库米拉","23.2900N91.0826E","23.2514N91.1331E"],
    ["","河内","21.0135N105.4848E","21.0010N105.5125E"],
    ["","海防","20.5246N106.3814E","20.4851N106.4535E"],
    ["","清化","19.5305N105.4308E","19.4358N105.5144E"],
    ["","荣市","18.4600N105.3734E","18.3828N105.4602E"],
    ["","洞海","17.2144N106.2934E","17.3200N106.4114E"],
    ["","顺化","16.3026N107.3130E","16.2356N107.3744E"],
    ["","岘港","16.1334N107.4903E","15.5506N108.1718E"],
    ["","广义","15.1300N108.5522E","15.0540N108.4535E"],
    ["","绥和","13.1046N109.1044E","13.0028N109.2056E"],
    ["","胡志明市","11.0945N106.2138E","10.2244N107.0123E"],
    ["","万象","18.0210N102.3205E","17.5305N102.4039E"],
    ["","金边","11.4409N105.0402E","11.2522N104.4257E"],
    ["","曼谷","13.5649N100.5617E","13.3404N100.1956E"],
    ["","吉隆坡","3.1438N101.4529E","3.0200N101.3653E"],
    ["","斯科沃罗季诺","53.5812N123.5426E","53.5947N123.5911E"],
    ["","阿尔丹","58.3814N125.2530E","58.3442N125.1848E"],
    ["","奥廖克明斯克","60.2156N120.3023E","60.2335N120.2241E"],
    ["","连斯克","60.4220N114.5405E","60.4439N115.0259E"],
    ["","泰舍特","55.5751N97.5727E","55.5440N98.0429E"],
    ["","哈巴罗夫斯克","48.3543N135.1314E","48.2000N135.0023E"],
    ["","纳霍德卡","42.5208N132.5921E","42.4459N132.4612E"],
    ["","伊尔库茨克","52.1755N104.0618E","52.1237N104.2542E"],
    ["","赤塔","52.0528N113.2122E","51.5925N113.3317E"],
    ["","阿特劳","47.1107N52.0311E","47.0035N51.4907E"],
    ["","肯基亚克","48.4704N57.0456E","48.2702N57.1156E"],
    ["","阿塔苏","48.4209N71.4120E","48.3929N71.3534E"],
    ["","霍尔果斯","44.1500N80.2345E","44.0759N80.3000E"],
    ["","阿拉木图","43.1003N76.4659E","43.2304N77.0057E"],
    ["","塔拉兹","42.5708N71.1434E","42.5000N71.2800E"],
    ["","希姆肯特","42.2053N69.2635E","42.1618N69.4405E"],
    ["","纳沃伊","40.0734N65.1822E","40.0357N65.2557E"],
    ["","布哈拉","39.4928N64.2034E","39.4351N64.2957E"],
    ["","克拉斯诺亚尔斯克","56.0800N93.0706E","55.5514N92.3628E"],
    ["","戈尔诺－阿尔泰斯克","51.5842N85.5253E","51.5445N85.5937E"],
    ["","马德岛港","19.2130N93.4036E","19.2210N93.4114E"],
    ["","皎漂港","19.2220N93.4049E","19.2204N93.4104E"],
    ["","拉斯拉凡港","25.5735N51.2235E","25.4718N51.3936E"],
    ["","格莱斯顿港","23.4859S151.1100E","23.5259S151.1758E"],
    ["","民都鲁港","3.1800N113.0557E","3.0901N112.5957E"],
    ["","邦坦港","0.1120N117.2819E","0.1055N117.2904E"],
    ["","塔什库尔干塔吉克自治县","37.4700N75.1159E","37.4500N75.1229E"],
    ["","喀什","39.3525N75.5022E","39.2442N76.0856E"],
    ["","瑞丽","24.0202N97.5500E","23.5700N97.4900E"]
]


def l2t(lls):
    # print(lls)
    f=""
    s=""
    fp,sp = True, True
    if "N" in lls:
        f= lls.split("N")
        if "E" in f[1]:
            s=f[1].split('E')
        else:
            sp=False
            s=f[1].split('W')
    else:
        fp=False
        f= lls.split("S")
        if "E" in f[1]:
            s=f[1].split('E')
        else:
            sp=False
            s=f[1].split('W')
    
    lat = f[0]
    if not fp:
        lat = '-' + lat

    lon = s[0]
    if not sp:
        lon = '-' + lon

    return lon+','+lat


def generateQuadKey(x, y, z):
	quadKey = []
	for i in range(z,0,-1):
		digit = 0
		mask = 1 << (i - 1)
		if ((x & mask) != 0):
			digit=digit+1
		if ((y & mask) != 0):
			digit=digit+2
		quadKey.append(str(digit))
	return "".join(quadKey)

np = multiprocessing.cpu_count()
tp=threading.BoundedSemaphore(np)
tname = "one"
uri = "https://t{}.dynamic.tiles.ditu.live.com/comp/ch/{}?mkt=zh-cn&n=z&it=A&src=o&og=503"

def dl(z, x, cy, my):
    tp.acquire()

    fn='./{}/{}/{}/'.format(tname,z,x)
    os.makedirs(fn, exist_ok=True)
    for y in range(cy,my):
        try:
            r = requests.get( uri.format(random.choice([0,1,2,3]), generateQuadKey(x, y, z)) )
            if r.status_code == 200 and len(r.content)>0:
                print('.', end='',flush=True)
                #print(fn+'b_{}_{}_{}.png'.format(z,x,y))
                fp = open(fn+'b_{}_{}_{}.png'.format(z, x, y), 'wb')
                fp.write(r.content)
                fp.close()
            else:
                print(r.status_code, end='!')
                
        except Exception as e:
            print("!",e)


    print(z,x, end='\t',flush=True)
    tp.release()

def deg2num(lat_deg, lon_deg, zoom):
    lat_rad = math.radians(lat_deg)
    n = 2.0 ** zoom
    xtile = int((lon_deg + 180.0) / 360.0 * n)
    ytile = int((1.0 - math.asinh(math.tan(lat_rad)) / math.pi) / 2.0 * n)
    return (xtile, ytile)

thd=[]
for z in range(1,19):
    wh = pow(2,z)
    if z < 9:
        for x in range(0, wh):
            th=threading.Thread(target=dl, args=(z, x, 0, wh, ))
            th.start()
            thd.append(th)
    else:
        for i in s2:
            p=l2t(i[2])
            p2=l2t(i[3])
            # print(p, '-------------' , p2)
            lat = float(p.split(',')[0])
            lon = float(p.split(',')[1])
            x, y = deg2num(lat, lon, z)

            lat = float(p2.split(',')[0])
            lon = float(p2.split(',')[1])
            x2, y2 = deg2num(lat, lon, z)

            if x > x2:
                sw=x
                x=x2
                x2=sw+1

            if y > y2:
                sw=y
                y=y2
                y2=sw+1

            for ax in range(x, x2+1):
                th=threading.Thread(target=dl, args=(z, ax, y, y2+1, ))
                th.start()
                thd.append(th)
for t in thd:
    t.join()